{"title":"package.json","meta":{"title":"package.json","pubdate":"2013-03-13","index":"5","filepath":"docs/en/package.md","filename":"package","directory":"en","id":"en-package"},"body":"\nspm follows the [Common Module Definition](https://github.com/spmjs/specification) packaging standards, compatible with nodejs' package.json.\n\nCMD [packaging draft](https://github.com/spmjs/specification/blob/master/draft/package.md) add an additional namespace, which is `family`. spm add another namespace, which is `spm`.\n\nHere is an example of `package.json`:\n\n```json\n{\n    \"family\": \"arale\",\n    \"name\": \"base\",\n    \"version\": \"1.0.0\",\n    \"description\": \"base is ....\",\n    \"homepage\": \"http://aralejs.org/base/\",\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/aralejs/base.git\"\n    },\n    \"keywords\": [\"class\"],\n\n    \"spm\": {\n        \"source\": \"src\",\n        \"output\": [\"base.js\", \"i18n/*\"],\n        \"alias\": {\n            \"class\": \"arale/class/1.0.0/class\",\n            \"events\": \"arale/events/1.0.0/events\"\n        },\n        \"devAlias\": {\n            \"mocha\" \"gallery/mocha/1.0.0/mocha\",\n            \"expect\" \"gallery/expect/1.0.0/expect\"\n        },\n        \"engines\": {\n            \"seajs\": \"seajs/seajs/1.2.0/sea.js\"\n        },\n        \"platforms\": {\n            \"ie\": [6, 7],\n            \"firefox\": [\"13\"],\n            \"chrome\": [20]\n        }\n    }\n}\n```\n\nPlatforms can be an array:\n\n    \"platforms\": [\"ie/6\", \"chrome/20\", \"firefox\"]\n\n\n## family\n\nThis is the account name on http://spmjs.org.\n\n## name\n\nThis is your package's name.\n\n## version\n\nThe version of your package. We only accept version like this:\n\n```\n1.0.0\n```\n\nThe regexp is `\\d+\\.\\d+\\.\\d+`.\n\n## description\n\nPut a description in it. It's a string. This helps people discover your package, as it's listed in `spm search`.\n\n\n## keywords\n\nPut keywords in it. It's an array of strings. This helps people discover your package as it's listed in `spm search`.\n\n## homepage\n\nThe url to the project homepage.\n\n## repository\n\nThe repository of your project.\n\n## private\n\nIf you set `\"private\": true` in your package.json, then spm will refuse to publish it to https://spmjs.org.\n\nThis is a way to prevent accidental publication of private repositories. But you can publish to other source center.\n\n## spm.alias\n\nAlias.\n\n## spm.output\n\nOutput is an array that contains the files for distribution, it will auto concat the relative dependencies.\n\n### Single File\n\nFor example:\n\n```js\n// a.js\ndefine(function(require) {\n    require('./b')\n});\n\n// b.js\ndefine(function(require) {\n    require('./c')\n});\n\n// c.js\ndefine(function(require) {\n});\n```\n\nNow define your output as:\n\n```json\n{\n    \"output\": [\"a.js\", \"c.js\"]\n}\n```\n\nIt will create a `a.js` and a `c.js` in the `dist` directory. The `dist/a.js` contains code of `src/a.js`, `src/b.js` and `src/c.js`. The `dist/c.js` will only contain the code of `src/c.js`, because it requires nothing.\n\n\n### Glob Pattern\n\nOutput also support glob patterns. Take an example:\n\n```\npackage.json\nsrc/\n    i18n/\n        en.js\n        zh.js\n        fr.js\n```\n\nNow define your output as:\n\n```json\n{\n    \"output\": [\"i18n/*.js\"]\n}\n```\n\nAnd it will distribute every js files to `dist` folder.\n\nIf your folder structure is something like this:\n\n```\nsrc/\n    i18n/\n        locale.js\n        en/\n            locale.js\n        zh/\n            zh_CN/\n                locale.js\n            zh_TW/\n                locale.js\n```\n\nYou should define your output as:\n\n```json\n{\n    \"output\": [\"i18n/**/*\"]\n}\n```\n\n## Old Time\n\n1. `root` is deprecated, use `family` instead.\n2. `dependencies` is deprecated, use `spm.alias` instead.\n3. `output` changed\n","abspath":"/Users/lepture/workspace/node/spm/docs/en/package.md","filepath":"docs/en/package.md","filename":"package","directory":"en","id":"en-package","tags":[],"pubdate":"2013-03-13T00:00:00.000Z","status":"public","html":"<p>spm follows the <a href=\"https://github.com/spmjs/specification\">Common Module Definition</a> packaging standards, compatible with nodejs&#39; package.json.</p>\n<p>CMD <a href=\"https://github.com/spmjs/specification/blob/master/draft/package.md\">packaging draft</a> add an additional namespace, which is <code>family</code>. spm add another namespace, which is <code>spm</code>.</p>\n<p>Here is an example of <code>package.json</code>:</p>\n<div class=\"highlight\"><pre><code class=\"javascript\">{\n    <span class=\"string\">\"family\"</span>: <span class=\"string\">\"arale\"</span>,\n    <span class=\"string\">\"name\"</span>: <span class=\"string\">\"base\"</span>,\n    <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,\n    <span class=\"string\">\"description\"</span>: <span class=\"string\">\"base is ....\"</span>,\n    <span class=\"string\">\"homepage\"</span>: <span class=\"string\">\"http://aralejs.org/base/\"</span>,\n    <span class=\"string\">\"repository\"</span>: {\n        <span class=\"string\">\"type\"</span>: <span class=\"string\">\"git\"</span>,\n        <span class=\"string\">\"url\"</span>: <span class=\"string\">\"https://github.com/aralejs/base.git\"</span>\n    },\n    <span class=\"string\">\"keywords\"</span>: [<span class=\"string\">\"class\"</span>],\n\n    <span class=\"string\">\"spm\"</span>: {\n        <span class=\"string\">\"source\"</span>: <span class=\"string\">\"src\"</span>,\n        <span class=\"string\">\"output\"</span>: [<span class=\"string\">\"base.js\"</span>, <span class=\"string\">\"i18n/*\"</span>],\n        <span class=\"string\">\"alias\"</span>: {\n            <span class=\"string\">\"class\"</span>: <span class=\"string\">\"arale/class/1.0.0/class\"</span>,\n            <span class=\"string\">\"events\"</span>: <span class=\"string\">\"arale/events/1.0.0/events\"</span>\n        },\n        <span class=\"string\">\"devAlias\"</span>: {\n            <span class=\"string\">\"mocha\"</span> <span class=\"string\">\"gallery/mocha/1.0.0/mocha\"</span>,\n            <span class=\"string\">\"expect\"</span> <span class=\"string\">\"gallery/expect/1.0.0/expect\"</span>\n        },\n        <span class=\"string\">\"engines\"</span>: {\n            <span class=\"string\">\"seajs\"</span>: <span class=\"string\">\"seajs/seajs/1.2.0/sea.js\"</span>\n        },\n        <span class=\"string\">\"platforms\"</span>: {\n            <span class=\"string\">\"ie\"</span>: [<span class=\"number\">6</span>, <span class=\"number\">7</span>],\n            <span class=\"string\">\"firefox\"</span>: [<span class=\"string\">\"13\"</span>],\n            <span class=\"string\">\"chrome\"</span>: [<span class=\"number\">20</span>]\n        }\n    }\n}</code></pre></div><p>Platforms can be an array:</p>\n<pre>&quot;platforms&quot;: [&quot;ie/6&quot;, &quot;chrome/20&quot;, &quot;firefox&quot;]</pre><h2 id=\"family\">family</h2><p>This is the account name on <a href=\"http://spmjs.org\">http://spmjs.org</a>.</p>\n<h2 id=\"name\">name</h2><p>This is your package&#39;s name.</p>\n<h2 id=\"version\">version</h2><p>The version of your package. We only accept version like this:</p>\n<pre>1.0.0</pre><p>The regexp is <code>\\d+\\.\\d+\\.\\d+</code>.</p>\n<h2 id=\"description\">description</h2><p>Put a description in it. It&#39;s a string. This helps people discover your package, as it&#39;s listed in <code>spm search</code>.</p>\n<h2 id=\"keywords\">keywords</h2><p>Put keywords in it. It&#39;s an array of strings. This helps people discover your package as it&#39;s listed in <code>spm search</code>.</p>\n<h2 id=\"homepage\">homepage</h2><p>The url to the project homepage.</p>\n<h2 id=\"repository\">repository</h2><p>The repository of your project.</p>\n<h2 id=\"private\">private</h2><p>If you set <code>&quot;private&quot;: true</code> in your package.json, then spm will refuse to publish it to <a href=\"https://spmjs.org\">https://spmjs.org</a>.</p>\n<p>This is a way to prevent accidental publication of private repositories. But you can publish to other source center.</p>\n<h2 id=\"spm-alias\">spm.alias</h2><p>Alias.</p>\n<h2 id=\"spm-output\">spm.output</h2><p>Output is an array that contains the files for distribution, it will auto concat the relative dependencies.</p>\n<h3 id=\"single-file\">Single File</h3><p>For example:</p>\n<div class=\"highlight\"><pre><code class=\"javascript\"><span class=\"comment\">// a.js</span>\ndefine(<span class=\"keyword\">function</span>(require) {\n    require(<span class=\"string\">'./b'</span>)\n});\n\n<span class=\"comment\">// b.js</span>\ndefine(<span class=\"keyword\">function</span>(require) {\n    require(<span class=\"string\">'./c'</span>)\n});\n\n<span class=\"comment\">// c.js</span>\ndefine(<span class=\"keyword\">function</span>(require) {\n});</code></pre></div><p>Now define your output as:</p>\n<div class=\"highlight\"><pre><code class=\"javascript\">{\n    <span class=\"string\">\"output\"</span>: [<span class=\"string\">\"a.js\"</span>, <span class=\"string\">\"c.js\"</span>]\n}</code></pre></div><p>It will create a <code>a.js</code> and a <code>c.js</code> in the <code>dist</code> directory. The <code>dist/a.js</code> contains code of <code>src/a.js</code>, <code>src/b.js</code> and <code>src/c.js</code>. The <code>dist/c.js</code> will only contain the code of <code>src/c.js</code>, because it requires nothing.</p>\n<h3 id=\"glob-pattern\">Glob Pattern</h3><p>Output also support glob patterns. Take an example:</p>\n<pre>package.json\nsrc/\n    i18n/\n        en.js\n        zh.js\n        fr.js</pre><p>Now define your output as:</p>\n<div class=\"highlight\"><pre><code class=\"javascript\">{\n    <span class=\"string\">\"output\"</span>: [<span class=\"string\">\"i18n/*.js\"</span>]\n}</code></pre></div><p>And it will distribute every js files to <code>dist</code> folder.</p>\n<p>If your folder structure is something like this:</p>\n<pre>src/\n    i18n/\n        locale.js\n        en/\n            locale.js\n        zh/\n            zh_CN/\n                locale.js\n            zh_TW/\n                locale.js</pre><p>You should define your output as:</p>\n<div class=\"highlight\"><pre><code class=\"javascript\">{\n    <span class=\"string\">\"output\"</span>: [<span class=\"string\">\"i18n/**/*\"</span>]\n}</code></pre></div><h2 id=\"old-time\">Old Time</h2><ol>\n<li><code>root</code> is deprecated, use <code>family</code> instead.</li>\n<li><code>dependencies</code> is deprecated, use <code>spm.alias</code> instead.</li>\n<li><code>output</code> changed</li>\n</ol>\n","toc":"<ul><li><a href=\"#family\">family</a></li><li><a href=\"#name\">name</a></li><li><a href=\"#version\">version</a></li><li><a href=\"#description\">description</a></li><li><a href=\"#keywords\">keywords</a></li><li><a href=\"#homepage\">homepage</a></li><li><a href=\"#repository\">repository</a></li><li><a href=\"#private\">private</a></li><li><a href=\"#spm-alias\">spm.alias</a></li><li><a href=\"#spm-output\">spm.output</a><ul><li><a href=\"#single-file\">Single File</a></li><li><a href=\"#glob-pattern\">Glob Pattern</a></li></ul></li><li><a href=\"#old-time\">Old Time</a></li></ul>","iframes":{}}