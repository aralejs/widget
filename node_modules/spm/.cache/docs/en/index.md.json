{"title":"spm","meta":{"title":"spm","pubdate":"2013-03-20","index":"0","description":"<p>spm is a static package manager, it&#39;s <strong>not a build tools</strong>.</p>","filepath":"docs/en/index.md","filename":"index","directory":"en","id":"en-index"},"body":"\nspm is built on nodejs, which means you have to install nodejs yourself.\nI believe you have done this part, but I'd like to repeat myself.\n\nThere are several ways to install nodejs. The easiest way is through a package manager like `apt-get` on debian-like linux distribution, or `homebrew` on mac. However node in such package managers may be too old.\n\nGet the node binaries on the offical [download](http://nodejs.org/download/) webpage.\n\nSuggestions for Linux:\n\n- grab the *Linux Binaries*, extract it to your home directory, for example: `~/dist/node`\n\n- add `~/dist/node/bin` to `PATH` in your bashrc or zshrc:\n\n   ```\n   export PATH=\"$PATH:$HOME/dist/node/bin\"\n   ```\n\nPutting node in your home directory or some place need no sudo privellege makes things simple. You don't have to `sudo npm install <package>` anymore.\n\nSuggestions for Mac:\n\n- just like Linux, you can do the same thing.\n- homebrew is another good choice.\n\nSuggestions for Windows:\n\n- do whatever you want, I don't think there is another choice.\n\n\n## Installation\n\nInstall spm is simple with npm:\n\n    $ npm install spm -g\n\nPlease install it with `-g` option, otherwise you can't use it in command line.\n\nIf you want to try the latest version of spm, try the ninja channel:\n\n    $ npm install spm@ninja -g\n\nYou can also grab the code from [github](https://github.com/spmjs/spm2) and install from the source code.\n\nTry with `spm` now:\n\n    $ spm\n\nIf you haven't set `NODE_PATH`, it will prompt an information like:\n\n```\nPlease set environment variable NODE_PATH in ~/.zshrc:\n\n    export NODE_PATH=/usr/local/share/npm/lib/node_modules\n\n```\n\n## Commands\n\nspm comes with some built-in commands, and it can be extended by plugins. Show the help screen with:\n\n    $ spm -h\n\nor:\n\n    $ spm help\n\nYou can get more help information of a sub-command by:\n\n    $ spm build -h\n\nor:\n\n    $ spm help build\n\nWant to write your own plugin? Checkout the [plugin](./plugin.md) section.\n\n## Build\n\nBuild is a **transport** process, it is not a code to binary process.\n\nFor example, we have a package **hello**:\n\n```\npackage.json\nsrc/\n    hello.js\n```\n\nThe source code of `hello.js` is as simple as:\n\n```js\ndefine(function(require, exports, module) {\n    exports.name = 'hello'\n    exports.jquery = require('jquery')\n})\n```\n\nThe `package.json` (more information on [package](./package.md) section) is as simple as:\n\n```js\n{\n    \"family\": \"lepture\",\n    \"name\": \"hello\",\n    \"version\": \"1.0.0\",\n    \"description\": \"hello spm\",\n    \"spm\": {\n        \"alias\": {\n            \"jquery\": \"jquery/jquery/1.7.2/jquery\"\n        },\n        \"output\": [\"hello.js\"]\n    }\n}\n```\n\nInstall the requirements and build the package:\n\n    $ spm install\n    $ spm build\n\nAfter `spm build`, it should be:\n\n```js\ndefine('lepture/hello/1.0.0/hello', ['jquery/jquery/1.7.2/jquery'], function(require) {\n    exports.name = 'hello'\n    exports.jquery = require('jquery/jquery/1.7.2/jquery')\n})\n```\n\nThe package structure will be:\n\n```\npackage.json\nsrc/\n    hello.js\ndist/\n    hello.js\n    hello-debug.js\n```\n\nGet more information on [build](./build.md).\n\n\n## Install\n\nYou have used `spm install` in the build process, learn more about `install` with:\n\n```\n$ spm help install\n```\n\nThere is also an [online manual](../cli/install.md) and the [desgin pattern](./install.md) bebind it.\n\n\n## Register & Login\n\nYou can register an account at [spmjs.org](https://spmjs.org). You can also register your account with `spm`:\n\n    $ spm login\n\n    do you have an account? (Y/n)\n\nAnd answer no. It will prompt:\n\n    do you have an account? (Y/n) n\n\n    username:\n    email:\n    password:\n\nIf you answer yes, you can login now.\n\n\n## Publish & Unpublish\n\nWe need your contribution, publishing a package helps a lot.\n\nRegister an account at [spmjs.org](https://spmjs.org). Replace `family` in `package.json` with your account name (`lepture` is my account name).\n\nAnd now you can publish your package with:\n\n    $ spm publish\n\nGet more help on publish:\n\n    $ spm help publish\n\n- You can also read our online manual [spm publish](../cli/publish.md).\n- Find more information on [package](./package.md).\n\nIf you accidentally published a broken version, you can force to publish the version again:\n\n    $ spm publish -f\n\nYou can also unpublish it:\n\n    $ spm unpublish family/name@version\n\nYou can even delete the whole project (**you can never recovery it again**):\n\n    $ spm unpublish family/name\n\n\n## Info & Search\n\nYou can't miss it, let's try:\n\n```\n$ spm help info\n$ spm help search\n```\n\n## Config\n\nThe configuration file is located at `~/.spm/spmrc`. It is in ini format:\n\n```ini\n[user]\nusername = lepture\n\n[source:private]\nurl = http://source.your-company.com\n```\n\nMore information can be found at [config](./config.md) section.\n","abspath":"/Users/lepture/workspace/node/spm/docs/en/index.md","filepath":"docs/en/index.md","filename":"index","directory":"en","id":"en-index","tags":[],"pubdate":"2013-03-20T00:00:00.000Z","status":"public","html":"<p>spm is built on nodejs, which means you have to install nodejs yourself.\nI believe you have done this part, but I&#39;d like to repeat myself.</p>\n<p>There are several ways to install nodejs. The easiest way is through a package manager like <code>apt-get</code> on debian-like linux distribution, or <code>homebrew</code> on mac. However node in such package managers may be too old.</p>\n<p>Get the node binaries on the offical <a href=\"http://nodejs.org/download/\">download</a> webpage.</p>\n<p>Suggestions for Linux:</p>\n<ul>\n<li><p>grab the <em>Linux Binaries</em>, extract it to your home directory, for example: <code>~/dist/node</code></p>\n</li>\n<li><p>add <code>~/dist/node/bin</code> to <code>PATH</code> in your bashrc or zshrc:</p>\n<pre> export PATH=&quot;$PATH:$HOME/dist/node/bin&quot;</pre></li>\n</ul>\n<p>Putting node in your home directory or some place need no sudo privellege makes things simple. You don&#39;t have to <code>sudo npm install &lt;package&gt;</code> anymore.</p>\n<p>Suggestions for Mac:</p>\n<ul>\n<li>just like Linux, you can do the same thing.</li>\n<li>homebrew is another good choice.</li>\n</ul>\n<p>Suggestions for Windows:</p>\n<ul>\n<li>do whatever you want, I don&#39;t think there is another choice.</li>\n</ul>\n<h2 id=\"installation\">Installation</h2><p>Install spm is simple with npm:</p>\n<pre>$ npm install spm -g</pre><p>Please install it with <code>-g</code> option, otherwise you can&#39;t use it in command line.</p>\n<p>If you want to try the latest version of spm, try the ninja channel:</p>\n<pre>$ npm install spm@ninja -g</pre><p>You can also grab the code from <a href=\"https://github.com/spmjs/spm2\">github</a> and install from the source code.</p>\n<p>Try with <code>spm</code> now:</p>\n<pre>$ spm</pre><p>If you haven&#39;t set <code>NODE_PATH</code>, it will prompt an information like:</p>\n<pre>Please set environment variable NODE_PATH in ~/.zshrc:\n\n    export NODE_PATH=/usr/local/share/npm/lib/node_modules</pre><h2 id=\"commands\">Commands</h2><p>spm comes with some built-in commands, and it can be extended by plugins. Show the help screen with:</p>\n<pre>$ spm -h</pre><p>or:</p>\n<pre>$ spm help</pre><p>You can get more help information of a sub-command by:</p>\n<pre>$ spm build -h</pre><p>or:</p>\n<pre>$ spm help build</pre><p>Want to write your own plugin? Checkout the <a href=\"./plugin.md\">plugin</a> section.</p>\n<h2 id=\"build\">Build</h2><p>Build is a <strong>transport</strong> process, it is not a code to binary process.</p>\n<p>For example, we have a package <strong>hello</strong>:</p>\n<pre>package.json\nsrc/\n    hello.js</pre><p>The source code of <code>hello.js</code> is as simple as:</p>\n<div class=\"highlight\"><pre><code class=\"javascript\">define(<span class=\"keyword\">function</span>(require, exports, module) {\n    exports.name = <span class=\"string\">'hello'</span>\n    exports.jquery = require(<span class=\"string\">'jquery'</span>)\n})</code></pre></div><p>The <code>package.json</code> (more information on <a href=\"./package.md\">package</a> section) is as simple as:</p>\n<div class=\"highlight\"><pre><code class=\"javascript\">{\n    <span class=\"string\">\"family\"</span>: <span class=\"string\">\"lepture\"</span>,\n    <span class=\"string\">\"name\"</span>: <span class=\"string\">\"hello\"</span>,\n    <span class=\"string\">\"version\"</span>: <span class=\"string\">\"1.0.0\"</span>,\n    <span class=\"string\">\"description\"</span>: <span class=\"string\">\"hello spm\"</span>,\n    <span class=\"string\">\"spm\"</span>: {\n        <span class=\"string\">\"alias\"</span>: {\n            <span class=\"string\">\"jquery\"</span>: <span class=\"string\">\"jquery/jquery/1.7.2/jquery\"</span>\n        },\n        <span class=\"string\">\"output\"</span>: [<span class=\"string\">\"hello.js\"</span>]\n    }\n}</code></pre></div><p>Install the requirements and build the package:</p>\n<pre>$ spm install\n$ spm build</pre><p>After <code>spm build</code>, it should be:</p>\n<div class=\"highlight\"><pre><code class=\"javascript\">define(<span class=\"string\">'lepture/hello/1.0.0/hello'</span>, [<span class=\"string\">'jquery/jquery/1.7.2/jquery'</span>], <span class=\"keyword\">function</span>(require) {\n    exports.name = <span class=\"string\">'hello'</span>\n    exports.jquery = require(<span class=\"string\">'jquery/jquery/1.7.2/jquery'</span>)\n})</code></pre></div><p>The package structure will be:</p>\n<pre>package.json\nsrc/\n    hello.js\ndist/\n    hello.js\n    hello-debug.js</pre><p>Get more information on <a href=\"./build.md\">build</a>.</p>\n<h2 id=\"install\">Install</h2><p>You have used <code>spm install</code> in the build process, learn more about <code>install</code> with:</p>\n<pre>$ spm help install</pre><p>There is also an <a href=\"../cli/install.md\">online manual</a> and the <a href=\"./install.md\">desgin pattern</a> bebind it.</p>\n<h2 id=\"register-amp-login\">Register &amp; Login</h2><p>You can register an account at <a href=\"https://spmjs.org\">spmjs.org</a>. You can also register your account with <code>spm</code>:</p>\n<pre>$ spm login\n\ndo you have an account? (Y/n)</pre><p>And answer no. It will prompt:</p>\n<pre>do you have an account? (Y/n) n\n\nusername:\nemail:\npassword:</pre><p>If you answer yes, you can login now.</p>\n<h2 id=\"publish-amp-unpublish\">Publish &amp; Unpublish</h2><p>We need your contribution, publishing a package helps a lot.</p>\n<p>Register an account at <a href=\"https://spmjs.org\">spmjs.org</a>. Replace <code>family</code> in <code>package.json</code> with your account name (<code>lepture</code> is my account name).</p>\n<p>And now you can publish your package with:</p>\n<pre>$ spm publish</pre><p>Get more help on publish:</p>\n<pre>$ spm help publish</pre><ul>\n<li>You can also read our online manual <a href=\"../cli/publish.md\">spm publish</a>.</li>\n<li>Find more information on <a href=\"./package.md\">package</a>.</li>\n</ul>\n<p>If you accidentally published a broken version, you can force to publish the version again:</p>\n<pre>$ spm publish -f</pre><p>You can also unpublish it:</p>\n<pre>$ spm unpublish family/name@version</pre><p>You can even delete the whole project (<strong>you can never recovery it again</strong>):</p>\n<pre>$ spm unpublish family/name</pre><h2 id=\"info-amp-search\">Info &amp; Search</h2><p>You can&#39;t miss it, let&#39;s try:</p>\n<pre>$ spm help info\n$ spm help search</pre><h2 id=\"config\">Config</h2><p>The configuration file is located at <code>~/.spm/spmrc</code>. It is in ini format:</p>\n<div class=\"highlight\"><pre><code class=\"ini\"><span class=\"title\">[user]</span>\n<span class=\"setting\">username = <span class=\"value\">lepture</span></span>\n\n<span class=\"title\">[source:private]</span>\n<span class=\"setting\">url = <span class=\"value\">http://source.your-company.com</span></span></code></pre></div><p>More information can be found at <a href=\"./config.md\">config</a> section.</p>\n","toc":"<ul><li><a href=\"#installation\">Installation</a></li><li><a href=\"#commands\">Commands</a></li><li><a href=\"#build\">Build</a></li><li><a href=\"#install\">Install</a></li><li><a href=\"#register-amp-login\">Register &amp; Login</a></li><li><a href=\"#publish-amp-unpublish\">Publish &amp; Unpublish</a></li><li><a href=\"#info-amp-search\">Info &amp; Search</a></li><li><a href=\"#config\">Config</a></li></ul>","iframes":{}}