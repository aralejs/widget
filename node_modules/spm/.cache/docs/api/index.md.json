{"title":"spm","meta":{"title":"spm","pubdate":"2013-03-26","index":"0","description":"<p>The API of spm.</p>","filepath":"docs/api/index.md","filename":"index","directory":"api","id":"api-index"},"body":"\nGet the interface of spm:\n\n```js\nvar spm = require('spm')\n```\n\n## spm.version\n\nThe version of spm.\n\n## spm.log(category, message)\n\nAlways use `spm.log` in your program, never use `console`.\n\n```js\nspm.log('install', 'arale/class')\n```\n\n## spm.plugin\n\nAPI for plugins.\n\n### spm.plugin.install(options)\n\nInstall a plugin, used by postinstall hook in npm:\n\n```js\nspm.plugin.install({\n  name: 'init',\n  bin: 'spm-init',\n  description: 'init …'\n})\n```\n\n### spm.plugin.uninstall(name)\n\nUninstall a plugin, used by uninstall hook in npm:\n\n```js\nspm.plugin.uninstall('init')\n```\n\n### spm.plugin.plugins\n\nAll installed plugins:\n\n```\nvar plugins = spm.plugin.plugins;\n```\n\n\n## spm.config\n\nInteract with `~/.spm/spmrc` config file.\n\n### spm.config.get(key)\n\nGet information in spmrc:\n\n```\nspm.config.get('user')\nspm.config.get('user.username')\n```\n\n### spm.config.set(key, value)\n\nSet section in spmrc:\n\n```\nspm.config.set('user.username', 'lepture')\n```\n\n### spm.config.remove(section)\n\nRemove a section in spmrc:\n\n```\nspm.config.remove('user')\n```\n\n## spm.build(options)\n\nBuild the module.\n\n### spm.build.loadBuildTasks(options, pkg)\n\nLoad build tasks: `spm-build`.\n\nThis is a task collection which is [grunt-spm-build](https://github.com/spmjs/grunt-spm-build). You can bind and load this task too.\n\n## spm.login(options)\n\nLogin/register spmjs.org.\n\n## spm.install(options)\n\nInstall packages from spmjs.org.\n\n## spm.info(options)\n\nGet information of a module from spmjs.org.\n\n## spm.search(options)\n\nSearch modules from spmjs.org.\n\n```\nspm.search({query: 'jquery'})\n```\n\n## spm.publish(options)\n\nPublish a package to spmjs.org.\n\n## spm.unpublish(options)\n\nUnpublish a package from spmjs.org.\n\n```\nspm.unpublish({query: 'arale/class@1.0.0'})\n```\n\n## spm.sdk\n\nLow level API:\n\n- [`spm.sdk.ast`](https://github.com/spmjs/cmd-util/blob/master/docs/ast.md)\n- [`spm.sdk.iduri`](https://github.com/spmjs/cmd-util/blob/master/docs/iduri.md)\n- [`spm.sdk.spmrc`](https://github.com/spmjs/spmrc)\n- [`spm.sdk.yuan`](./yuan.md)\n- [`spm.sdk.grunt`](./grunt.md)\n","abspath":"/Users/lepture/workspace/node/spm/docs/api/index.md","filepath":"docs/api/index.md","filename":"index","directory":"api","id":"api-index","tags":[],"pubdate":"2013-03-26T00:00:00.000Z","status":"public","html":"<p>Get the interface of spm:</p>\n<div class=\"highlight\"><pre><code class=\"javascript\"><span class=\"keyword\">var</span> spm = require(<span class=\"string\">'spm'</span>)</code></pre></div><h2 id=\"spm-version\">spm.version</h2><p>The version of spm.</p>\n<h2 id=\"spm-log-category-message\">spm.log(category, message)</h2><p>Always use <code>spm.log</code> in your program, never use <code>console</code>.</p>\n<div class=\"highlight\"><pre><code class=\"javascript\">spm.log(<span class=\"string\">'install'</span>, <span class=\"string\">'arale/class'</span>)</code></pre></div><h2 id=\"spm-plugin\">spm.plugin</h2><p>API for plugins.</p>\n<h3 id=\"spm-plugin-install-options\">spm.plugin.install(options)</h3><p>Install a plugin, used by postinstall hook in npm:</p>\n<div class=\"highlight\"><pre><code class=\"javascript\">spm.plugin.install({\n  name: <span class=\"string\">'init'</span>,\n  bin: <span class=\"string\">'spm-init'</span>,\n  description: <span class=\"string\">'init …'</span>\n})</code></pre></div><h3 id=\"spm-plugin-uninstall-name\">spm.plugin.uninstall(name)</h3><p>Uninstall a plugin, used by uninstall hook in npm:</p>\n<div class=\"highlight\"><pre><code class=\"javascript\">spm.plugin.uninstall(<span class=\"string\">'init'</span>)</code></pre></div><h3 id=\"spm-plugin-plugins\">spm.plugin.plugins</h3><p>All installed plugins:</p>\n<pre>var plugins = spm.plugin.plugins;</pre><h2 id=\"spm-config\">spm.config</h2><p>Interact with <code>~/.spm/spmrc</code> config file.</p>\n<h3 id=\"spm-config-get-key\">spm.config.get(key)</h3><p>Get information in spmrc:</p>\n<pre>spm.config.get(&#39;user&#39;)\nspm.config.get(&#39;user.username&#39;)</pre><h3 id=\"spm-config-set-key-value\">spm.config.set(key, value)</h3><p>Set section in spmrc:</p>\n<pre>spm.config.set(&#39;user.username&#39;, &#39;lepture&#39;)</pre><h3 id=\"spm-config-remove-section\">spm.config.remove(section)</h3><p>Remove a section in spmrc:</p>\n<pre>spm.config.remove(&#39;user&#39;)</pre><h2 id=\"spm-build-options\">spm.build(options)</h2><p>Build the module.</p>\n<h3 id=\"spm-build-loadbuildtasks-options-pkg\">spm.build.loadBuildTasks(options, pkg)</h3><p>Load build tasks: <code>spm-build</code>.</p>\n<p>This is a task collection which is <a href=\"https://github.com/spmjs/grunt-spm-build\">grunt-spm-build</a>. You can bind and load this task too.</p>\n<h2 id=\"spm-login-options\">spm.login(options)</h2><p>Login/register spmjs.org.</p>\n<h2 id=\"spm-install-options\">spm.install(options)</h2><p>Install packages from spmjs.org.</p>\n<h2 id=\"spm-info-options\">spm.info(options)</h2><p>Get information of a module from spmjs.org.</p>\n<h2 id=\"spm-search-options\">spm.search(options)</h2><p>Search modules from spmjs.org.</p>\n<pre>spm.search({query: &#39;jquery&#39;})</pre><h2 id=\"spm-publish-options\">spm.publish(options)</h2><p>Publish a package to spmjs.org.</p>\n<h2 id=\"spm-unpublish-options\">spm.unpublish(options)</h2><p>Unpublish a package from spmjs.org.</p>\n<pre>spm.unpublish({query: &#39;arale/class@1.0.0&#39;})</pre><h2 id=\"spm-sdk\">spm.sdk</h2><p>Low level API:</p>\n<ul>\n<li><a href=\"https://github.com/spmjs/cmd-util/blob/master/docs/ast.md\"><code>spm.sdk.ast</code></a></li>\n<li><a href=\"https://github.com/spmjs/cmd-util/blob/master/docs/iduri.md\"><code>spm.sdk.iduri</code></a></li>\n<li><a href=\"https://github.com/spmjs/spmrc\"><code>spm.sdk.spmrc</code></a></li>\n<li><a href=\"./yuan.md\"><code>spm.sdk.yuan</code></a></li>\n<li><a href=\"./grunt.md\"><code>spm.sdk.grunt</code></a></li>\n</ul>\n","toc":"<ul><li><a href=\"#spm-version\">spm.version</a></li><li><a href=\"#spm-log-category-message\">spm.log(category, message)</a></li><li><a href=\"#spm-plugin\">spm.plugin</a><ul><li><a href=\"#spm-plugin-install-options\">spm.plugin.install(options)</a></li><li><a href=\"#spm-plugin-uninstall-name\">spm.plugin.uninstall(name)</a></li><li><a href=\"#spm-plugin-plugins\">spm.plugin.plugins</a></li></ul></li><li><a href=\"#spm-config\">spm.config</a><ul><li><a href=\"#spm-config-get-key\">spm.config.get(key)</a></li><li><a href=\"#spm-config-set-key-value\">spm.config.set(key, value)</a></li><li><a href=\"#spm-config-remove-section\">spm.config.remove(section)</a></li></ul></li><li><a href=\"#spm-build-options\">spm.build(options)</a><ul><li><a href=\"#spm-build-loadbuildtasks-options-pkg\">spm.build.loadBuildTasks(options, pkg)</a></li></ul></li><li><a href=\"#spm-login-options\">spm.login(options)</a></li><li><a href=\"#spm-install-options\">spm.install(options)</a></li><li><a href=\"#spm-info-options\">spm.info(options)</a></li><li><a href=\"#spm-search-options\">spm.search(options)</a></li><li><a href=\"#spm-publish-options\">spm.publish(options)</a></li><li><a href=\"#spm-unpublish-options\">spm.unpublish(options)</a></li><li><a href=\"#spm-sdk\">spm.sdk</a></li></ul>","iframes":{}}