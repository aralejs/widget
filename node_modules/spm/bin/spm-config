#!/usr/bin/env node

var commander = require('commander');
require('colorful').colorful();
var config = require('../lib/config');

commander.usage('[section.key] [value]');

commander
  .command('remove <section>')
  .description('remove a section')
  .action(config.remove);

commander
  .command('show')
  .description('show your spm configuration')
  .action(config.show);


commander.on('--help', function() {
  console.log('  ' + 'How to use:'.to.bold.blue.color);
  console.log();
  console.log('    Config file is located at ' + '~/.spm/spmrc'.to.bold.color + ' with ini format');
  console.log('    You can edit with your favorite editor, or through the commands:');
  console.log();
  console.log('    $ ' + 'spm config '.to.magenta.color + 'user.username'.to.cyan.color + ' yourname');
  console.log('    $ ' + 'spm config '.to.magenta.color + 'source:spm.url '.to.cyan.color + 'https://spmjs.org'.to.underline.color);
  console.log();
});


commander.parse(process.argv);

var subcmd = commander.args[0];
var lastcmd = commander.args[commander.args.length - 1];

if (!subcmd) {
  process.stdout.write(commander.helpInformation());
  commander.emit('--help');
  process.exit();
}

if (typeof subcmd === 'string' && subcmd.indexOf('.') !== -1 && commander.args.length > 1) {
  var value = commander.args.slice(1).join(' ');
  console.log();
  config.config(subcmd, value);
  console.log();
} else if (typeof subcmd === 'string' && typeof lastcmd === 'string') {
  console.log();
  console.log(("  Can't find command: " + subcmd).to.red.color);
  console.log();
}
