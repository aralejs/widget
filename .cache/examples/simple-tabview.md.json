{"title":"简单的 TabView","meta":{"title":"简单的 TabView","order":"3","filepath":"examples/simple-tabview.md","filename":"simple-tabview","directory":"examples","id":"examples-simple-tabview","template":"post","category":"examples"},"body":"\n<style>\n    #simple-tabs {\n        width: 400px;\n    }\n\n    .nav li {\n        list-style: none;\n        float: left;\n        border: 1px solid #eee;\n        padding: 5px 10px;\n        border-bottom: none;\n        cursor: pointer;\n    }\n\n    .nav li.active {\n        background: #eee;\n    }\n\n    .content {\n        clear: both;\n        border: 1px solid #eee;\n        height: 200px;\n        width: 500px;\n        overflow: hidden;\n    }\n\n    .content div {\n        height: 200px;\n        padding: 20px;\n    }\n\n    #egg {\n        padding: 5px 20px;\n        margin: 10px 0;\n    }\n</style>\n\n\n## 示例：简单的 TabView\n\n\n下面演示如何基于 Widget 来快速开发一个简单的 TabView 界面组件。\n\n### HTML\n\n````html\n<div id=\"demo\">\n    <ul class=\"nav\">\n        <li>开放</li>\n        <li>简单</li>\n        <li>易用</li>\n    </ul>\n    <div class=\"content\">\n        <div>开源开放，海纳百川。</div>\n        <div>如无必要，勿增实体。</div>\n        <div>一目了然，容易学习。</div>\n    </div>\n</div>\n<button id=\"egg\">手贱</button>\n````\n\n### JavaScript\n\n````js\nseajs.use(['widget', 'jquery'], function(Widget, $) {\n\n    // 基于 Widget 定义 SimpleTabView 组件\n    var SimpleTabView = Widget.extend({\n\n        attrs: {\n            triggers: {\n                value: '.nav li',\n                getter: function(val) {\n                    return this.$(val);\n                },\n                readOnly: true\n            },\n\n            panels: {\n                value: '.content div',\n                getter: function(val) {\n                    return this.$(val);\n                },\n                readOnly: true\n            },\n\n            activeIndex: {\n                value: 0\n            }\n        },\n\n        events: {\n            'click .nav li': '_switchToEventHandler'\n        },\n\n        _onRenderActiveIndex: function(val, prev) {\n            var triggers = this.get('triggers');\n            var panels = this.get('panels');\n\n            triggers.eq(prev).removeClass('active');\n            triggers.eq(val).addClass('active');\n\n            panels.eq(prev).hide();\n            panels.eq(val).show();\n        },\n\n        _switchToEventHandler: function(ev) {\n            var index = this.get('triggers').index(ev.target);\n            this.switchTo(index);\n        },\n\n        switchTo: function(index) {\n            this.set('activeIndex', index);\n        },\n\n        setup: function() {\n            this.get('panels').hide();\n            this.switchTo(this.get('activeIndex'))\n        },\n\n        add: function(title, content) {\n            var li = $('<li>' + title + '</li>');\n            var div = $('<div>' + content + '</div>');\n\n            li.appendTo(this.get('triggers')[0].parentNode);\n            div.appendTo(this.get('panels')[0].parentNode);\n\n            return this;\n        },\n\n        setActiveContent: function(content) {\n            this.get('panels').eq(this.get('activeIndex')).html(content);\n        },\n\n        size: function() {\n            return this.get('triggers').length;\n        }\n    });\n\n\n    var tabView = new SimpleTabView({\n        element: '#demo',\n        activeIndex: 0\n    }).render();\n\n\n    // 彩蛋：增加一点小趣味\n    var counter = 1;\n\n    $('#egg').click(function() {\n        if (counter < 4) {\n            tabView.add('哈哈', '你居然点击了 ' + counter++ + ' 次')\n                    .switchTo(tabView.size() - 1);\n        }\n        else if (counter++ === 4) {\n            tabView.setActiveContent('囧，你居然还点击，手真贱呀');\n        }\n        else {\n            tabView.element.remove();\n            $(this).remove();\n            $('.example').html('悄悄的我走了，不带走一行代码⋯⋯');\n        }\n    });\n\n});\n````\n","abspath":"D:/workspace/demo/widget/examples/simple-tabview.md","filepath":"examples/simple-tabview.md","filename":"simple-tabview","directory":"examples","id":"examples-simple-tabview","tags":[],"status":"public","html":"<style>\n    #simple-tabs {\n        width: 400px;\n    }\n\n    .nav li {\n        list-style: none;\n        float: left;\n        border: 1px solid #eee;\n        padding: 5px 10px;\n        border-bottom: none;\n        cursor: pointer;\n    }\n\n    .nav li.active {\n        background: #eee;\n    }\n\n    .content {\n        clear: both;\n        border: 1px solid #eee;\n        height: 200px;\n        width: 500px;\n        overflow: hidden;\n    }\n\n    .content div {\n        height: 200px;\n        padding: 20px;\n    }\n\n    #egg {\n        padding: 5px 20px;\n        margin: 10px 0;\n    }\n</style>\n\n\n<h2 id=\"示例：简单的-tabview\">示例：简单的 TabView</h2><p>下面演示如何基于 Widget 来快速开发一个简单的 TabView 界面组件。</p>\n<h3 id=\"html\">HTML</h3><div class=\"nico-insert-code\"><div id=\"demo\">\n    <ul class=\"nav\">\n        <li>开放</li>\n        <li>简单</li>\n        <li>易用</li>\n    </ul>\n    <div class=\"content\">\n        <div>开源开放，海纳百川。</div>\n        <div>如无必要，勿增实体。</div>\n        <div>一目了然，容易学习。</div>\n    </div>\n</div>\n<button id=\"egg\">手贱</button></div><div class=\"highlight\"><pre><code class=\"xml\"><span class=\"tag\">&lt;<span class=\"title\">div</span> <span class=\"attribute\">id</span>=<span class=\"value\">\"demo\"</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"title\">ul</span> <span class=\"attribute\">class</span>=<span class=\"value\">\"nav\"</span>&gt;</span>\n        <span class=\"tag\">&lt;<span class=\"title\">li</span>&gt;</span>开放<span class=\"tag\">&lt;/<span class=\"title\">li</span>&gt;</span>\n        <span class=\"tag\">&lt;<span class=\"title\">li</span>&gt;</span>简单<span class=\"tag\">&lt;/<span class=\"title\">li</span>&gt;</span>\n        <span class=\"tag\">&lt;<span class=\"title\">li</span>&gt;</span>易用<span class=\"tag\">&lt;/<span class=\"title\">li</span>&gt;</span>\n    <span class=\"tag\">&lt;/<span class=\"title\">ul</span>&gt;</span>\n    <span class=\"tag\">&lt;<span class=\"title\">div</span> <span class=\"attribute\">class</span>=<span class=\"value\">\"content\"</span>&gt;</span>\n        <span class=\"tag\">&lt;<span class=\"title\">div</span>&gt;</span>开源开放，海纳百川。<span class=\"tag\">&lt;/<span class=\"title\">div</span>&gt;</span>\n        <span class=\"tag\">&lt;<span class=\"title\">div</span>&gt;</span>如无必要，勿增实体。<span class=\"tag\">&lt;/<span class=\"title\">div</span>&gt;</span>\n        <span class=\"tag\">&lt;<span class=\"title\">div</span>&gt;</span>一目了然，容易学习。<span class=\"tag\">&lt;/<span class=\"title\">div</span>&gt;</span>\n    <span class=\"tag\">&lt;/<span class=\"title\">div</span>&gt;</span>\n<span class=\"tag\">&lt;/<span class=\"title\">div</span>&gt;</span>\n<span class=\"tag\">&lt;<span class=\"title\">button</span> <span class=\"attribute\">id</span>=<span class=\"value\">\"egg\"</span>&gt;</span>手贱<span class=\"tag\">&lt;/<span class=\"title\">button</span>&gt;</span></code></pre></div><h3 id=\"javascript\">JavaScript</h3><script>seajs.use(['widget', 'jquery'], function(Widget, $) {\n\n    // 基于 Widget 定义 SimpleTabView 组件\n    var SimpleTabView = Widget.extend({\n\n        attrs: {\n            triggers: {\n                value: '.nav li',\n                getter: function(val) {\n                    return this.$(val);\n                },\n                readOnly: true\n            },\n\n            panels: {\n                value: '.content div',\n                getter: function(val) {\n                    return this.$(val);\n                },\n                readOnly: true\n            },\n\n            activeIndex: {\n                value: 0\n            }\n        },\n\n        events: {\n            'click .nav li': '_switchToEventHandler'\n        },\n\n        _onRenderActiveIndex: function(val, prev) {\n            var triggers = this.get('triggers');\n            var panels = this.get('panels');\n\n            triggers.eq(prev).removeClass('active');\n            triggers.eq(val).addClass('active');\n\n            panels.eq(prev).hide();\n            panels.eq(val).show();\n        },\n\n        _switchToEventHandler: function(ev) {\n            var index = this.get('triggers').index(ev.target);\n            this.switchTo(index);\n        },\n\n        switchTo: function(index) {\n            this.set('activeIndex', index);\n        },\n\n        setup: function() {\n            this.get('panels').hide();\n            this.switchTo(this.get('activeIndex'))\n        },\n\n        add: function(title, content) {\n            var li = $('<li>' + title + '</li>');\n            var div = $('<div>' + content + '</div>');\n\n            li.appendTo(this.get('triggers')[0].parentNode);\n            div.appendTo(this.get('panels')[0].parentNode);\n\n            return this;\n        },\n\n        setActiveContent: function(content) {\n            this.get('panels').eq(this.get('activeIndex')).html(content);\n        },\n\n        size: function() {\n            return this.get('triggers').length;\n        }\n    });\n\n\n    var tabView = new SimpleTabView({\n        element: '#demo',\n        activeIndex: 0\n    }).render();\n\n\n    // 彩蛋：增加一点小趣味\n    var counter = 1;\n\n    $('#egg').click(function() {\n        if (counter < 4) {\n            tabView.add('哈哈', '你居然点击了 ' + counter++ + ' 次')\n                    .switchTo(tabView.size() - 1);\n        }\n        else if (counter++ === 4) {\n            tabView.setActiveContent('囧，你居然还点击，手真贱呀');\n        }\n        else {\n            tabView.element.remove();\n            $(this).remove();\n            $('.example').html('悄悄的我走了，不带走一行代码⋯⋯');\n        }\n    });\n\n});</script><div class=\"highlight\"><pre><code class=\"javascript\">seajs.use([<span class=\"string\">'widget'</span>, <span class=\"string\">'jquery'</span>], <span class=\"keyword\">function</span>(Widget, $) {\n\n    <span class=\"comment\">// 基于 Widget 定义 SimpleTabView 组件</span>\n    <span class=\"keyword\">var</span> SimpleTabView = Widget.extend({\n\n        attrs: {\n            triggers: {\n                value: <span class=\"string\">'.nav li'</span>,\n                getter: <span class=\"keyword\">function</span>(val) {\n                    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.$(val);\n                },\n                readOnly: <span class=\"literal\">true</span>\n            },\n\n            panels: {\n                value: <span class=\"string\">'.content div'</span>,\n                getter: <span class=\"keyword\">function</span>(val) {\n                    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.$(val);\n                },\n                readOnly: <span class=\"literal\">true</span>\n            },\n\n            activeIndex: {\n                value: <span class=\"number\">0</span>\n            }\n        },\n\n        events: {\n            <span class=\"string\">'click .nav li'</span>: <span class=\"string\">'_switchToEventHandler'</span>\n        },\n\n        _onRenderActiveIndex: <span class=\"keyword\">function</span>(val, prev) {\n            <span class=\"keyword\">var</span> triggers = <span class=\"keyword\">this</span>.get(<span class=\"string\">'triggers'</span>);\n            <span class=\"keyword\">var</span> panels = <span class=\"keyword\">this</span>.get(<span class=\"string\">'panels'</span>);\n\n            triggers.eq(prev).removeClass(<span class=\"string\">'active'</span>);\n            triggers.eq(val).addClass(<span class=\"string\">'active'</span>);\n\n            panels.eq(prev).hide();\n            panels.eq(val).show();\n        },\n\n        _switchToEventHandler: <span class=\"keyword\">function</span>(ev) {\n            <span class=\"keyword\">var</span> index = <span class=\"keyword\">this</span>.get(<span class=\"string\">'triggers'</span>).index(ev.target);\n            <span class=\"keyword\">this</span>.switchTo(index);\n        },\n\n        switchTo: <span class=\"keyword\">function</span>(index) {\n            <span class=\"keyword\">this</span>.set(<span class=\"string\">'activeIndex'</span>, index);\n        },\n\n        setup: <span class=\"keyword\">function</span>() {\n            <span class=\"keyword\">this</span>.get(<span class=\"string\">'panels'</span>).hide();\n            <span class=\"keyword\">this</span>.switchTo(<span class=\"keyword\">this</span>.get(<span class=\"string\">'activeIndex'</span>))\n        },\n\n        add: <span class=\"keyword\">function</span>(title, content) {\n            <span class=\"keyword\">var</span> li = $(<span class=\"string\">'&lt;li&gt;'</span> + title + <span class=\"string\">'&lt;/li&gt;'</span>);\n            <span class=\"keyword\">var</span> div = $(<span class=\"string\">'&lt;div&gt;'</span> + content + <span class=\"string\">'&lt;/div&gt;'</span>);\n\n            li.appendTo(<span class=\"keyword\">this</span>.get(<span class=\"string\">'triggers'</span>)[<span class=\"number\">0</span>].parentNode);\n            div.appendTo(<span class=\"keyword\">this</span>.get(<span class=\"string\">'panels'</span>)[<span class=\"number\">0</span>].parentNode);\n\n            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;\n        },\n\n        setActiveContent: <span class=\"keyword\">function</span>(content) {\n            <span class=\"keyword\">this</span>.get(<span class=\"string\">'panels'</span>).eq(<span class=\"keyword\">this</span>.get(<span class=\"string\">'activeIndex'</span>)).html(content);\n        },\n\n        size: <span class=\"keyword\">function</span>() {\n            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.get(<span class=\"string\">'triggers'</span>).length;\n        }\n    });\n\n\n    <span class=\"keyword\">var</span> tabView = <span class=\"keyword\">new</span> SimpleTabView({\n        element: <span class=\"string\">'#demo'</span>,\n        activeIndex: <span class=\"number\">0</span>\n    }).render();\n\n\n    <span class=\"comment\">// 彩蛋：增加一点小趣味</span>\n    <span class=\"keyword\">var</span> counter = <span class=\"number\">1</span>;\n\n    $(<span class=\"string\">'#egg'</span>).click(<span class=\"keyword\">function</span>() {\n        <span class=\"keyword\">if</span> (counter &lt; <span class=\"number\">4</span>) {\n            tabView.add(<span class=\"string\">'哈哈'</span>, <span class=\"string\">'你居然点击了 '</span> + counter++ + <span class=\"string\">' 次'</span>)\n                    .switchTo(tabView.size() - <span class=\"number\">1</span>);\n        }\n        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (counter++ === <span class=\"number\">4</span>) {\n            tabView.setActiveContent(<span class=\"string\">'囧，你居然还点击，手真贱呀'</span>);\n        }\n        <span class=\"keyword\">else</span> {\n            tabView.element.remove();\n            $(<span class=\"keyword\">this</span>).remove();\n            $(<span class=\"string\">'.example'</span>).html(<span class=\"string\">'悄悄的我走了，不带走一行代码⋯⋯'</span>);\n        }\n    });\n\n});</code></pre></div>","toc":"<ul><li><a href=\"#示例：简单的-tabview\">示例：简单的 TabView</a><ul><li><a href=\"#html\">HTML</a></li><li><a href=\"#javascript\">JavaScript</a></li></ul></ul>","iframes":{},"template":"post"}